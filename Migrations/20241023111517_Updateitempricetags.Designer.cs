// <auto-generated />
using System;
using Althaus_Warehouse.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Althaus_Warehouse.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20241023111517_Updateitempricetags")]
    partial class Updateitempricetags
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateHired = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jim.jack@altwarehouse.com",
                            EmployeeType = 1,
                            FirstName = "Jimmy",
                            IsActive = true,
                            LastName = "Jackson",
                            PasswordHash = "$2a$11$4UDvFzYCtE.rCebgzlCIZeEjLhvV43ASh.fgMsMsm.1hNuB14zEPa"
                        },
                        new
                        {
                            Id = 2,
                            DateHired = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@altwarehouse.com",
                            EmployeeType = 2,
                            FirstName = "Jane",
                            IsActive = true,
                            LastName = "Smith",
                            PasswordHash = "$2a$11$ttlaiTI1O5uvOoQz/d4vXOmQdti9k4ido1Rzoj4Kqcj762keSWQem"
                        },
                        new
                        {
                            Id = 3,
                            DateHired = new DateTime(2022, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson@altwarehouse.com",
                            EmployeeType = 3,
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Johnson",
                            PasswordHash = "$2a$11$uIUe3mxbugvk92fj5IYc5ekU.k3ho9e0C0Ug6QugjaWRSO7tm8nAa"
                        },
                        new
                        {
                            Id = 4,
                            DateHired = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hamza.adam@altwarehouse.com",
                            EmployeeType = 4,
                            FirstName = "Hamza",
                            IsActive = true,
                            LastName = "Adam",
                            PasswordHash = "$2a$11$mxKVEEsq8t77RlzkEa1s9.JJoNOD21zNn/W3.OhXFA5Tj6zGMtEjm"
                        });
                });

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6540),
                            Description = "15-inch laptop with 8GB RAM",
                            ItemTypeId = 24,
                            Name = "Laptop",
                            Price = 599.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 2,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6626),
                            Description = "Ergonomic office chair with lumbar support",
                            ItemTypeId = 8,
                            Name = "Office Chair",
                            Price = 249.99m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 3,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6642),
                            Description = "Wireless mouse",
                            ItemTypeId = 11,
                            Name = "Mouse",
                            Price = 19.99m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 3,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6683),
                            Description = "Mechanical keyboard with RGB lighting",
                            ItemTypeId = 11,
                            Name = "Keyboard",
                            Price = 89.99m,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 1,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6692),
                            Description = "Fresh dairy milk",
                            ItemTypeId = 1,
                            Name = "Milk",
                            Price = 1.99m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 2,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6707),
                            Description = "Organic chicken breast",
                            ItemTypeId = 2,
                            Name = "Chicken Breast",
                            Price = 5.99m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 7,
                            CreatedById = 1,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6726),
                            Description = "5G smartphone with 128GB storage",
                            ItemTypeId = 7,
                            Name = "Smartphone",
                            Price = 799.99m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 8,
                            CreatedById = 3,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6735),
                            Description = "Lightweight running shoes",
                            ItemTypeId = 30,
                            Name = "Running Shoes",
                            Price = 59.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 2,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6744),
                            Description = "Wireless all-in-one printer",
                            ItemTypeId = 11,
                            Name = "Printer",
                            Price = 129.99m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 10,
                            CreatedById = 1,
                            DateCreated = new DateTime(2024, 10, 23, 12, 15, 15, 769, DateTimeKind.Local).AddTicks(6753),
                            Description = "A comprehensive guide to C# programming",
                            ItemTypeId = 12,
                            Name = "Book: C# Programming",
                            Price = 39.99m,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Perishable dairy products.",
                            Name = "Dairy"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fresh meat products.",
                            Name = "Meat"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Various seafood items.",
                            Name = "Seafood"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fresh fruits.",
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Fresh vegetables.",
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Various drinks.",
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Electronic devices.",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Furniture items.",
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Clothing and apparel.",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Children's toys.",
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Office supplies.",
                            Name = "Stationery"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Various books.",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Hand tools and equipment.",
                            Name = "Tools"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Cleaning products.",
                            Name = "Cleaning Supplies"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Personal care items.",
                            Name = "Personal Care"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Appliances for home use.",
                            Name = "Household Appliances"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Beauty and cosmetic products.",
                            Name = "Cosmetics"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Grocery items.",
                            Name = "Grocery"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Snack foods.",
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Ingredients for baking.",
                            Name = "Baking Supplies"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Cooking spices.",
                            Name = "Spices"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Various grains.",
                            Name = "Grains"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Supplies for office use.",
                            Name = "Office Supplies"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Computers and accessories.",
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Monitors and screens.",
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Equipment for sports.",
                            Name = "Sports Equipment"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Automotive parts and supplies.",
                            Name = "Automotive"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Health products.",
                            Name = "Health and Wellness"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Jewelry items.",
                            Name = "Jewelry"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Shoes and footwear.",
                            Name = "Footwear"
                        });
                });

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Item", b =>
                {
                    b.HasOne("Althaus_Warehouse.Models.Entities.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Althaus_Warehouse.Models.Entities.ItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ItemType");
                });
#pragma warning restore 612, 618
        }
    }
}
