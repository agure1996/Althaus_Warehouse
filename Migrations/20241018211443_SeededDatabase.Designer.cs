// <auto-generated />
using System;
using Althaus_Warehouse.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Althaus_Warehouse.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20241018211443_SeededDatabase")]
    partial class SeededDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateHired = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jim.jack@altwarehouse.com",
                            EmployeeType = 1,
                            FirstName = "Jimmy",
                            IsActive = true,
                            LastName = "Jackson"
                        },
                        new
                        {
                            Id = 2,
                            DateHired = new DateTime(2021, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@altwarehouse.com",
                            EmployeeType = 2,
                            FirstName = "Jane",
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            DateHired = new DateTime(2022, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson@altwarehouse.com",
                            EmployeeType = 3,
                            FirstName = "Emily",
                            IsActive = true,
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            DateHired = new DateTime(2021, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hamza.adam@altwarehouse.com",
                            EmployeeType = 4,
                            FirstName = "Hamza",
                            IsActive = true,
                            LastName = "Adam"
                        });
                });

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "15-inch laptop with 8GB RAM",
                            ItemType = 23,
                            Name = "Laptop",
                            Price = 599.99000000000001,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 2,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Ergonomic office chair with lumbar support",
                            ItemType = 7,
                            Name = "Office Chair",
                            Price = 249.99000000000001,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 3,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Wireless mouse",
                            ItemType = 22,
                            Name = "Mouse",
                            Price = 19.989999999999998,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 3,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Mechanical keyboard with RGB lighting",
                            ItemType = 22,
                            Name = "Keyboard",
                            Price = 89.989999999999995,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 1,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Fresh dairy milk",
                            ItemType = 0,
                            Name = "Milk",
                            Price = 1.99,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 2,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Organic chicken breast",
                            ItemType = 1,
                            Name = "Chicken Breast",
                            Price = 5.9900000000000002,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 7,
                            CreatedById = 1,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "5G smartphone with 128GB storage",
                            ItemType = 6,
                            Name = "Smartphone",
                            Price = 799.99000000000001,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 8,
                            CreatedById = 3,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Lightweight running shoes",
                            ItemType = 29,
                            Name = "Running Shoes",
                            Price = 59.990000000000002,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 2,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "Wireless all-in-one printer",
                            ItemType = 22,
                            Name = "Printer",
                            Price = 129.99000000000001,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 10,
                            CreatedById = 1,
                            DateCreated = new DateOnly(1, 1, 1),
                            Description = "A comprehensive guide to C# programming",
                            ItemType = 11,
                            Name = "Book: C# Programming",
                            Price = 39.990000000000002,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("Althaus_Warehouse.Models.Entities.Item", b =>
                {
                    b.HasOne("Althaus_Warehouse.Models.Entities.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
